name: samplestack

on:
    push:
        branches:
            - main

jobs:
    build_app:
        name: Build and push the Docker image to ECR
        runs-on: ubuntu-latest
        env:
            AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
            AWS_REGION: ap-southeast-2
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_ECR_REGISTRY: 560616450834.dkr.ecr.ap-southeast-2.amazonaws.com/samplestack-repo02ac86cf-aksbpnit35zl

        steps:
            - uses: actions/checkout@v3

            - name: Install dependencies
              run: npm install

            - name: Run tests
              run: npm run test

            - name: Build the app
              run: npm run build:app
             
            - name: Build the Docker image
              run: docker build -t $AWS_ECR_REGISTRY:latest .

            - name: Authenticate to ECR
              run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

            - name: Push the Docker image to ECR
              run: docker push $AWS_ECR_REGISTRY:latest
    deploy_app:
        name: Deploy the CDK stack
        runs-on: ubuntu-latest
        env:
            AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
            AWS_REGION: ap-southeast-2
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        steps:
            - uses: actions/checkout@v3

            - name: Install dependencies
              run: npm install

            - name: Run cdk build
              run: npm run build:cdk

            - name: Run cdk synth
              run: npm run cdk synth

            - name: Run cdk deploy
              run: npm run cdk deploy SampleStack